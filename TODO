  . intercalar bloques de prosacada y bloques de antisacada
    . al inicio hacer 10 y 10 de cada una sumándole las explicaciones
  . agregar calibración inicial con mensaje explicativo
  . agregar eyetracking el experimento online
    . actualizar docs
  . chequear si puedo agregar algo más de captura de hardware como por ejemplo
    la resolución o el tipo de la cámara. Dsp al momento de presentar el exp
    estaría bueno consultar al sujeto la posición de la cámara
  . armar lo de la medida de confianza y reportarlo junto a los eventos de
    estimación
    . hay que tomar extender el detector de movimiento para que se le pueda
      preguntar qué tan lejos de la posición inicial está el sujeto
    . tmb hay que plotearlo en el gráfico del histórico para tener al menos un
      chequeo visual de que la métrica da mal antes de que se descalibre
  . mirar si se puede usar lo del plugin para determinar la distancia y poder
    mostrar los estímulos en cierto ángulo como hacen en la bibliografía
  . pedir los datos a los sujetos dentro de la misma instancia de JSPsych

  . en el home mostrar las tareas existentes
    . sacar del exp online la visualización de la mirada
    . actualizar el readme con lo de que se puede usar la vis

  . ordenar un poco todo
    . nuevamente algunos exps quedaron viejos
    . rename canvasDrawer to drawer, tmp tiene sentido exponerlo en los utils
    . mover shuffle y sleep a utils y rastoc-lib
    . se puede retrabajar un poco el tema de los eventos de rastoc (incluidos
      los de debugging) para que quede mas centralizado y no anden repetidos los
      nombres de los eventos

  . rehacer el gráfico del histórico

  . hacer un poco de data analysis para antisacadas
    . desde jspsych habría que señalar inicios y finalizciones de cada trial
      así como un nombre de exp para pode reconocer
    . hacer lo que comentó Juan de agrupar correctos e incorrectos, además de
      hacer un mirroring para agrupar izquierda y derecha
    . para el de heatmaps tiene que estar lo de si es izquieda o derecha + pro
      vs anti
      . hay que separar el criterio de agrupación de trials de la generación del
        heatmap por si más adelante se decide armar heatmap de otro
    . dsp hay que hacer an

  . permitir que el data analysis pueda recibir múltiples experimentos por
    instancia de JSPsych
    . Parte del código puede estar armado sin bancar esto 
  . permitir que el data analysis pueda recibir instancias de JSPsych de
    múltiples sujetos

  . ver bien como hacer lo de usar rastoc sin JSPsych
    . revisar la inicialización de WG
      . el módulo de WG y la extension de JSPsych hay que agregarlas al
        directorio `/build` para facilitar la instalación
      . no debería ser necesario el llamado a `jsPsych.init`. Dsp hay que
        recrear la inicializción. Tiene que seguir siendo compatible con JSPsych
    . en `rastoc-lib` armar algún js que agregue controles al viewport
        - display de info de rastoc: si está lista o no la libreria, si se
          descalibró el sistema
        - botón para calibrar: al clickearlo se dibuja un overlay donde se
          dibujan los estímulos para la calibración
        - botón para exportar la data: al clickearlo te ofrece a descargar un
          archivo con los eventos que se generan
    . armar una web genérica par tener de playground

  . ver un poco el tema de handlear los errores mejor
    - si el tab con el experimento se deja abierto en background, hay chances de
      que crashee
